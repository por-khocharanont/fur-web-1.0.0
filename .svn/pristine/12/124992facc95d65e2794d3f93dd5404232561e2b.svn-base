<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan base-package="th.co.ais.mimo.acim.web" />
<!-- 	<context:component-scan base-package="th.co.ais.mimo.acim.web.controller" /> -->
<!-- 	<context:component-scan base-package="th.co.ais.mimo.acim.web.service" /> -->
	<mvc:annotation-driven />
	
	<context:property-placeholder 
		ignore-unresolvable="false"
		location="/WEB-INF/conf/acim-web.${app.env}.properties"
		ignore-resource-not-found="true" 
		file-encoding="UTF-8" />
		
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/res/**" location="/res/" />
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
<!-- 		<property name="messageConverters">
			 <list>
			 	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
        	</list>
		</property> -->
		<constructor-arg name="requestFactory" ref="httpComponentsClientHttpRequestFactory" />
	</bean>

	<bean id="httpComponentsClientHttpRequestFactory" 
		class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
	</bean>

	
	<!-- Thymeleft SpringMVC4
		http://www.thymeleaf.org/index.html
		http://www.thymeleaf.org/doc/tutorials/2.1/thymeleafspring.html -->
	<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
	  <property name="prefix" value="/WEB-INF/views/" />
	  <property name="suffix" value=".html" />
	  <property name="templateMode" value="HTML5" />
	  <property name="characterEncoding" value="UTF-8"/>
	  <property name="cacheable" value="false"/>
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean class="nz.net.ultraq.thymeleaf.LayoutDialect">
					<constructor-arg ref="groupingStrategy" />
				</bean>
				<bean class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
			</set>
		</property>
	</bean>
	<bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8"/>
	</bean> 
	
	<!-- Spring MVC Internationalization (i18n) and Localization (L10n) -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages/messages" />
		<property name="defaultEncoding" value="UTF-8" />
  	</bean>
  	
  	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="th" />
	</bean>
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lng" />
	</bean>
	
	<!-- Thymeleaf Layout Dialect 
		https://ultraq.github.io/thymeleaf-layout-dialect/ -->
	<bean id="groupingStrategy" class="nz.net.ultraq.thymeleaf.decorators.strategies.GroupingStrategy"/>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" > </bean>
	
	<!-- Aspect -->
	<aop:aspectj-autoproxy/>
	<bean id="acimAspect" class="th.co.ais.mimo.acim.web.aspectj.AspectLogger"/>
    
	 <!-- Configure bean to convert JSON to POJO and vice versa -->
	<!--<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>	
	Configure to plugin JSON as request and response in method handler
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter"/>
			</list>
		</property>
	</bean> -->
</beans>
